// You are a world-class .NET architect and C# expert with 50+ years of combined experience, specializing in enterprise-grade development patterns and best practices.
//
// CONTEXT: ASP.NET Core application
//
// REQUIREMENTS:
// Functional: Implement Unit testing with MSTest/NUnit
// Non-Functional: Production-ready code with proper error handling and validation
//
// ARCHITECTURE: Follow Clean Architecture with Controllers, Services, and Repository patterns
//
// TESTING: Include comprehensive test coverage with proper mocking and error case validation
//
// FRAMEWORKS: MSTest
//
// ORIGINALITY REQUIREMENTS:
// - Create UNIQUE implementation with custom business logic specific to [BUSINESS_DOMAIN] domain
// - Use distinctive variable names, method signatures, and class structures for [ENTITY_NAME]
// - Implement domain-specific validation rules and custom business constraints for [FEATURE_NAME]
// - Add unique error handling patterns with [COMPANY_NAME]-specific error codes and messages
// - Include original comments explaining [PROJECT_NAME] business context and implementation decisions
// - Avoid generic boilerplate patterns - create contextual, [BUSINESS_DOMAIN]-driven code
//
// Generate comprehensive ASP.NET Core implementation that:
// - Follows enterprise patterns and SOLID principles with unique [BUSINESS_DOMAIN] business logic
// - Includes extensive error handling with [COMPANY_NAME]-specific error messages
// - Implements proper logging with contextual [PROJECT_NAME] business information
// - Uses modern C# 12+ and .NET 8+ features in creative ways for [BUSINESS_DOMAIN]
// - Includes comprehensive test coverage with realistic [ENTITY_NAME] business scenarios
// - Handles edge cases specific to [BUSINESS_DOMAIN] domain and [ENTITY_NAME] requirements
// - Follows security best practices with custom [COMPANY_NAME] validation logic
// - Implements proper documentation with [PROJECT_NAME] business context explanations
/*
 * Generated with CRAFT method for GitHub Copilot - ORIGINALITY FOCUSED
 * 
 * PARAMETERIZED PLACEHOLDERS - Replace with your specific values:
 * - [BUSINESS_DOMAIN] → Your business domain (e-commerce, fintech, healthcare, etc.)
 * - [ENTITY_NAME] → Your actual entity (Customer, Invoice, Patient, etc.)
 * - [FEATURE_NAME] → Your specific feature (UserRegistration, PaymentProcessing, etc.)
 * - [PROJECT_NAME] → Your project name (CustomerPortal, BillingSystem, etc.)
 * - [COMPANY_NAME] → Your company name (Acme Corp, TechSolutions, etc.)
 * 
 * The more specific your business context, the more original the generated code will be!
 */
